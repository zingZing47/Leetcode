class Solution:
# Using the slow and fast pointers again, the slow pointer will be in the middle position 
# when the fast pointer reaches the end of the list.
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        slow = head
        fast = head
        
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        return slow
